{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","utils/consts.ts","components/PeopleTable/PeopleTable.tsx","components/PeopleFilters.tsx","components/pages/PeoplePage/PeoplePage.tsx","components/Navbar.tsx","components/pages/HomePage/HomePage.tsx","components/pages/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","useParams","personId","href","map","born","died","mother","motherName","father","fatherName","PeopleFilters","type","placeholder","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","getPeople","peopleFromServer","find","preparePeople","catch","finally","isDisplayError","isNoPeopleFromServer","length","isPeopleFromServer","Navbar","role","isActive","HomePage","NotFoundPage","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.62d48e2f.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { FEMALE, MALE } from '../../utils/consts';\n\ninterface Props {\n  person: Person\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={person.slug}\n    className={classNames({\n      'has-text-danger': person.sex === FEMALE,\n      'has-text-link': person.sex === MALE,\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","export const FEMALE = 'f';\nexport const MALE = 'm';\nexport const EMPTY = '-';\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { EMPTY } from '../../utils/consts';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  people: Person[],\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personId = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <a href=\"#/people?sort=name\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <a href=\"#/people?sort=sex\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <a href=\"#/people?sort=born&amp;order=desc\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort-up\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <a href=\"#/people?sort=died\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort\" />\n                </span>\n              </a>\n            </span>\n          </th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n\n        <tbody>\n          {people.map((person) => (\n            <tr\n              data-cy=\"person\"\n              className={\n                classNames({\n                  'has-background-warning': personId === person.slug,\n                })\n              }\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {person.mother\n                  ? (\n                    <PersonLink person={person.mother} />\n                  )\n                  : (\n                    person.motherName || EMPTY\n                  )}\n              </td>\n              <td>\n                {person.father\n                  ? (\n                    <PersonLink person={person.father} />\n                  )\n                  : (\n                    person.fatherName || EMPTY\n                  )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </thead>\n    </table>\n  );\n};\n","export const PeopleFilters = () => {\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <a className=\"is-active\" href=\"#/people\">All</a>\n        <a className=\"\" href=\"#/people?sex=m\">Male</a>\n        <a className=\"\" href=\"#/people?sex=f\">Female</a>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1\"\n              href=\"#/people?centuries=16\"\n            >\n              16\n            </a>\n\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1 is-info\"\n              href=\"#/people?centuries=17\"\n            >\n              17\n            </a>\n\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1 is-info\"\n              href=\"#/people?centuries=18\"\n            >\n              18\n            </a>\n\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1 is-info\"\n              href=\"#/people?centuries=19\"\n            >\n              19\n            </a>\n\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1\"\n              href=\"#/people?centuries=20\"\n            >\n              20\n            </a>\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <a\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              href=\"#/people\"\n            >\n              All\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          className=\"button is-link is-outlined is-fullwidth\"\n          href=\"#/people\"\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../../../types';\nimport { getPeople } from '../../../api';\nimport { Loader } from '../../Loader';\nimport { PeopleTable } from '../../PeopleTable/PeopleTable';\nimport { PeopleFilters } from '../../PeopleFilters';\n\nfunction preparePeople(people: Person[]) {\n  return people.map(person => {\n    return {\n      ...person,\n      mother: people.find(mother => mother.name === person.motherName),\n      father: people.find(father => father.name === person.fatherName),\n    };\n  });\n}\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(peopleFromServer => {\n        setPeople(preparePeople(peopleFromServer));\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const isDisplayError = isError && !isLoading;\n  const isNoPeopleFromServer = !people.length && !isLoading && !isError;\n  const isPeopleFromServer = !!people.length && !isError;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {isDisplayError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {isNoPeopleFromServer && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {isPeopleFromServer && (\n                <PeopleTable people={people} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }: { isActive: boolean }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }: { isActive: boolean }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/pages/PeoplePage/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\nimport { HomePage } from './components/pages/HomePage/HomePage';\nimport { NotFoundPage } from './components/pages/NotFoundPage/NotFoundPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":personId\" />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}